{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient'; // Your Supabase client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const session = supabase.auth.session(); // Check session\n\n  if (!session) {\n    // Redirect to login page if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","supabase","jsxDEV","_jsxDEV","ProtectedRoute","children","session","auth","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient'; // Your Supabase client\n\nconst ProtectedRoute = ({ children }) => {\n  const session = supabase.auth.session(); // Check session\n\n  if (!session) {\n    // Redirect to login page if not authenticated\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,OAAO,GAAGL,QAAQ,CAACM,IAAI,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEzC,IAAI,CAACA,OAAO,EAAE;IACZ;IACA,oBAAOH,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,OAAOP,QAAQ;AACjB,CAAC;AAACQ,EAAA,GATIT,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}