{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/components/ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // Extract access_token and refresh_token from URL\n    const hashParams = new URLSearchParams(location.hash.slice(1));\n    const accessToken = hashParams.get('access_token');\n    const refreshToken = hashParams.get('refresh_token');\n    if (!accessToken || !refreshToken) {\n      setError('Invalid or missing tokens. Please try resetting your password again.');\n    }\n  }, [location]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) throw error;\n      setSuccess(true);\n      setTimeout(() => navigate('/'), 3000); // Redirect to login after 3 seconds\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Reset Your Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, error), success && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Password successfully updated! Redirecting to login...\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"new-password\",\n    type: \"password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    placeholder: \"Enter your new password\",\n    minLength: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading || success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, loading ? 'Resetting Password...' : 'Reset Password'))));\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","supabase","ResetPassword","newPassword","setNewPassword","loading","setLoading","error","setError","success","setSuccess","navigate","location","hashParams","URLSearchParams","hash","slice","accessToken","get","refreshToken","handleSubmit","e","preventDefault","auth","updateUser","password","setTimeout","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","placeholder","minLength","disabled"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    // Extract access_token and refresh_token from URL\n    const hashParams = new URLSearchParams(location.hash.slice(1));\n    const accessToken = hashParams.get('access_token');\n    const refreshToken = hashParams.get('refresh_token');\n\n    if (!accessToken || !refreshToken) {\n      setError('Invalid or missing tokens. Please try resetting your password again.');\n    }\n  }, [location]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n\n    try {\n      const { error } = await supabase.auth.updateUser({ password: newPassword });\n      if (error) throw error;\n      setSuccess(true);\n      setTimeout(() => navigate('/'), 3000); // Redirect to login after 3 seconds\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <div className=\"reset-password-box\">\n        <h2>Reset Your Password</h2>\n        {error && <p className=\"error-message\">{error}</p>}\n        {success && <p className=\"success-message\">Password successfully updated! Redirecting to login...</p>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"new-password\">New Password</label>\n            <input\n              id=\"new-password\"\n              type=\"password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              required\n              placeholder=\"Enter your new password\"\n              minLength=\"8\"\n            />\n          </div>\n          <button type=\"submit\" disabled={loading || success}>\n            {loading ? 'Resetting Password...' : 'Reset Password'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}