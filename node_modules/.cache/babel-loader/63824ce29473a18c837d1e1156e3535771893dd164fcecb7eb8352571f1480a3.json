{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport Auth from './Auth';\nimport JobBoard from './JobBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    // Check active session on component mount\n    const currentSession = supabase.auth.session();\n    setSession(currentSession);\n\n    // Listen for changes in auth state\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setSession(session);\n    });\n\n    // Cleanup the listener on unmount\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: session ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Private Job Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => supabase.auth.signOut(),\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JobBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Auth, {\n      setSession: setSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"my2JknXsLNPscnT9b+5uRmb6O9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Auth","JobBoard","jsxDEV","_jsxDEV","App","_s","session","setSession","currentSession","auth","data","authListener","onAuthStateChange","event","subscription","unsubscribe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","signOut","_c","$RefreshReg$"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport Auth from './Auth';\nimport JobBoard from './JobBoard';\nimport './App.css';\n\nconst App = () => {\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    // Check active session on component mount\n    const currentSession = supabase.auth.session();\n    setSession(currentSession);\n\n    // Listen for changes in auth state\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        setSession(session);\n      }\n    );\n\n    // Cleanup the listener on unmount\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {session ? (\n        <div>\n          <header className=\"header\">\n            <h1>Private Job Board</h1>\n            <button\n              onClick={() => supabase.auth.signOut()}\n              className=\"logout-button\"\n            >\n              Logout\n            </button>\n          </header>\n          <JobBoard />\n        </div>\n      ) : (\n        <Auth setSession={setSession} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,cAAc,GAAGT,QAAQ,CAACU,IAAI,CAACH,OAAO,CAAC,CAAC;IAC9CC,UAAU,CAACC,cAAc,CAAC;;IAE1B;IACA,MAAM;MAAEE,IAAI,EAAEC;IAAa,CAAC,GAAGZ,QAAQ,CAACU,IAAI,CAACG,iBAAiB,CAC5D,CAACC,KAAK,EAAEP,OAAO,KAAK;MAClBC,UAAU,CAACD,OAAO,CAAC;IACrB,CACF,CAAC;;IAED;IACA,OAAO,MAAM;MACXK,YAAY,CAACG,YAAY,CAACC,WAAW,CAAC,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBX,OAAO,gBACNH,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAQa,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACxBd,OAAA;UAAAc,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BlB,OAAA;UACEmB,OAAO,EAAEA,CAAA,KAAMvB,QAAQ,CAACU,IAAI,CAACc,OAAO,CAAC,CAAE;UACvCP,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACTlB,OAAA,CAACF,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,gBAENlB,OAAA,CAACH,IAAI;MAACO,UAAU,EAAEA;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}