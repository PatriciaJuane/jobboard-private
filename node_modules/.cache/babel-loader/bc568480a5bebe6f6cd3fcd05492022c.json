{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/components/ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // Extract access_token and refresh_token from URL\n    const hashParams = new URLSearchParams(location.hash.slice(1));\n    const accessToken = hashParams.get('access_token');\n    const refreshToken = hashParams.get('refresh_token');\n    if (!accessToken || !refreshToken) {\n      setError('Invalid or missing tokens. Please try resetting your password again.');\n    }\n  }, [location]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n      if (error) throw error;\n      alert('Password updated successfully!');\n      navigate('/login');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Reset Your Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, error), success && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Password successfully updated!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePasswordReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    placeholder: \"Enter your new password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, loading ? 'Resetting Password...' : 'Reset Password'))));\n};\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","supabase","ResetPassword","newPassword","setNewPassword","loading","setLoading","error","setError","navigate","location","hashParams","URLSearchParams","hash","slice","accessToken","get","refreshToken","handleSubmit","e","preventDefault","auth","updateUser","password","alert","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","success","onSubmit","handlePasswordReset","type","value","onChange","target","required","placeholder","disabled"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    // Extract access_token and refresh_token from URL\n    const hashParams = new URLSearchParams(location.hash.slice(1));\n    const accessToken = hashParams.get('access_token');\n    const refreshToken = hashParams.get('refresh_token');\n\n    if (!accessToken || !refreshToken) {\n      setError('Invalid or missing tokens. Please try resetting your password again.');\n    }\n  }, [location]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { error } = await supabase.auth.updateUser({ password: newPassword });\n      if (error) throw error;\n      alert('Password updated successfully!');\n      navigate('/login');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <div className=\"reset-password-box\">\n        <h2>Reset Your Password</h2>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        {success && <p style={{ color: 'green' }}>Password successfully updated!</p>}\n        <form onSubmit={handlePasswordReset}>\n          <label>New Password</label>\n          <input\n            type=\"password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n            placeholder=\"Enter your new password\"\n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Resetting Password...' : 'Reset Password'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}