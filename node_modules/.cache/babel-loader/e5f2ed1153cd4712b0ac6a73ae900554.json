{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/components/Auth.js\";\n// src/components/Auth.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\nimport './Auth.css'; // Import the CSS file\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [session, setSession] = useState(null);\n  const [authMode, setAuthMode] = useState('login'); // 'login', 'signup', or 'resetPassword'\n\n  const navigate = useNavigate();\n  const getURL = () => {\n    var _process$env$PUBLIC_S, _process, _process$env;\n    let url = (_process$env$PUBLIC_S = (_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.PUBLIC_SITE_URL) !== null && _process$env$PUBLIC_S !== void 0 ? _process$env$PUBLIC_S :\n    // Set this to your site URL in production env.\n    'http://localhost:3000/';\n    // Make sure to include `https://` when not localhost.\n    url = url.startsWith('http') ? url : `https://${url}`;\n    // Make sure to include a trailing `/`.\n    url = url.endsWith('/') ? url : `${url}/`;\n    return url;\n  };\n  useEffect(() => {\n    const {\n      subscription\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setSession(session);\n      if (session) {\n        navigate('/jobboard');\n      }\n    });\n\n    // Cleanup by unsubscribing\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password\n      });\n      if (error) {\n        setError(error.message);\n      } else if (data.session) {\n        // Successful login, redirect to jobboard\n        navigate('/jobboard');\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email: email,\n        password: password\n      });\n      if (error) {\n        setError(error.message);\n      } else if (data.session) {\n        // Successful signup, redirect to jobboard\n        navigate('/jobboard');\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    /**\n     * Step 1: Send the user an email to get a password reset token.\n     * This email contains a link which sends the user back to your application.\n     */\n    const {\n      data,\n      error\n    } = await supabase.auth.resetPasswordForEmail({\n      email: email\n    });\n\n    /**\n    * Step 2: Once the user is redirected back to your application,\n    * ask the user to reset their password.\n    */\n    useEffect(() => {\n      supabase.auth.onAuthStateChange(async (event, session) => {\n        if (event == \"PASSWORD_RECOVERY\") {\n          const newPassword = prompt(\"What would you like your new password to be?\");\n          const {\n            data,\n            error\n          } = await supabase.auth.updateUser({\n            password: newPassword\n          });\n          if (data) alert(\"Password updated successfully!\");\n          if (error) alert(\"There was an error updating your password.\");\n        }\n      });\n    }, []);\n    setLoading(false);\n  };\n  const renderForm = () => {\n    switch (authMode) {\n      case 'login':\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleLogin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }\n        }, \"Login\"), error && /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }\n        }, error), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }\n        }, loading ? 'Logging in...' : 'Login'), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }\n        }, \"Don't have an account?\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n          onClick: () => setAuthMode('signup'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }\n        }, \"Sign up here\")), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, \"Forgot password?\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n          onClick: () => setAuthMode('resetPassword'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }\n        }, \"Reset here\")));\n      case 'signup':\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleSignup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }\n        }, \"Sign Up\"), error && /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }\n        }, error), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        }, loading ? 'Signing up...' : 'Sign Up'), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }\n        }, \"Already have an account?\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n          onClick: () => setAuthMode('login'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }\n        }, \"Login here\")));\n      case 'resetPassword':\n        return /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: handleResetPassword,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }\n        }, \"Reset Password\"), error && /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 23\n          }\n        }, error), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }\n        }, loading ? 'Sending reset link...' : 'Send Reset Link'), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }\n        }, \"Back to\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n          onClick: () => setAuthMode('login'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }\n        }, \"Login\")));\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, session ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Welcome, \", session.user.email), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: async () => {\n      await supabase.auth.signOut();\n      setSession(null);\n      navigate('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Logout\")) : renderForm()));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","Auth","email","setEmail","password","setPassword","loading","setLoading","error","setError","session","setSession","authMode","setAuthMode","navigate","getURL","_process$env$PUBLIC_S","_process","_process$env","url","process","env","PUBLIC_SITE_URL","startsWith","endsWith","subscription","auth","onAuthStateChange","event","unsubscribe","handleLogin","e","preventDefault","data","signInWithPassword","message","handleSignup","signUp","handleResetPassword","resetPasswordForEmail","newPassword","prompt","updateUser","alert","renderForm","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","value","onChange","target","required","disabled","onClick","className","user","signOut"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/components/Auth.js"],"sourcesContent":["// src/components/Auth.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../utils/supabaseClient';\nimport './Auth.css';  // Import the CSS file\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [session, setSession] = useState(null);\n  const [authMode, setAuthMode] = useState('login'); // 'login', 'signup', or 'resetPassword'\n\n  const navigate = useNavigate();\n\n  const getURL = () => {\n    let url = process?.env?.PUBLIC_SITE_URL ?? // Set this to your site URL in production env.\n      'http://localhost:3000/'\n    // Make sure to include `https://` when not localhost.\n    url = url.startsWith('http') ? url : `https://${url}`\n    // Make sure to include a trailing `/`.\n    url = url.endsWith('/') ? url : `${url}/`\n    return url\n  }\n  \n\n  useEffect(() => {\n    const { subscription } = supabase.auth.onAuthStateChange((event, session) => {\n      setSession(session);\n      if (session) {\n        navigate('/jobboard');\n      }\n    });\n  \n    // Cleanup by unsubscribing\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n  }, [navigate]);\n  \n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password,\n      });\n\n      if (error) {\n        setError(error.message);\n      } else if (data.session) {\n        // Successful login, redirect to jobboard\n        navigate('/jobboard');\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email: email,\n        password: password,\n      });\n\n      if (error) {\n        setError(error.message);\n      } else if (data.session) {\n        // Successful signup, redirect to jobboard\n        navigate('/jobboard');\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    /**\n     * Step 1: Send the user an email to get a password reset token.\n     * This email contains a link which sends the user back to your application.\n     */\n    const { data, error } = await supabase.auth.resetPasswordForEmail({email: email})\n\n    /**\n    * Step 2: Once the user is redirected back to your application,\n    * ask the user to reset their password.\n    */\n    useEffect(() => {\nsupabase.auth.onAuthStateChange(async (event, session) => {\n      if (event == \"PASSWORD_RECOVERY\") {\n        const newPassword = prompt(\"What would you like your new password to be?\");\n        const { data, error } = await supabase.auth\n          .updateUser({ password: newPassword })\n\n        if (data) alert(\"Password updated successfully!\")\n        if (error) alert(\"There was an error updating your password.\")\n      }\n    })\n    }, [])\n\n    setLoading(false);\n  };\n\n  const renderForm = () => {\n    switch (authMode) {\n      case 'login':\n        return (\n          <form onSubmit={handleLogin}>\n            <h2>Login</h2>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div>\n              <label>Email</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Password</label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" disabled={loading}>\n              {loading ? 'Logging in...' : 'Login'}\n            </button>\n            <p>\n              Don't have an account?{' '}\n              <span onClick={() => setAuthMode('signup')}>Sign up here</span>\n            </p>\n            <p>\n              Forgot password?{' '}\n              <span onClick={() => setAuthMode('resetPassword')}>Reset here</span>\n            </p>\n          </form>\n        );\n      case 'signup':\n        return (\n          <form onSubmit={handleSignup}>\n            <h2>Sign Up</h2>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div>\n              <label>Email</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label>Password</label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" disabled={loading}>\n              {loading ? 'Signing up...' : 'Sign Up'}\n            </button>\n            <p>\n              Already have an account?{' '}\n              <span onClick={() => setAuthMode('login')}>Login here</span>\n            </p>\n          </form>\n        );\n      case 'resetPassword':\n        return (\n          <form onSubmit={handleResetPassword}>\n            <h2>Reset Password</h2>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div>\n              <label>Email</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" disabled={loading}>\n              {loading ? 'Sending reset link...' : 'Send Reset Link'}\n            </button>\n            <p>\n              Back to{' '}\n              <span onClick={() => setAuthMode('login')}>Login</span>\n            </p>\n          </form>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        {session ? (\n          <div>\n            <h2>Welcome, {session.user.email}</h2>\n            <button\n              onClick={async () => {\n                await supabase.auth.signOut();\n                setSession(null);\n                navigate('/');\n              }}\n            >\n              Logout\n            </button>\n          </div>\n        ) : (\n          renderForm()\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}