{"ast":null,"code":"var _jsxFileName = \"/Users/patricia/Documents/GitHub/job-board/src/Auth.js\",\n  _s = $RefreshSig$();\n// src/Auth.js\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  setSession\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    supabase.auth.onAuthStateChange((event, session) => {\n      if (session) {\n        // User is logged in, update UI\n        console.log('Session exists:', session);\n      } else {\n        // User is logged out, update UI accordingly\n        console.log('No active session');\n      }\n    });\n  }, []);\n  const handleAuth = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (isLogin) {\n        response = await supabase.auth.signInWithPassword({\n          email,\n          password\n        });\n      } else {\n        response = await supabase.auth.signUp({\n          email,\n          password\n        });\n      }\n      if (response.error) throw response.error;\n      setSession(response.session);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAuth,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Please wait...' : isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isLogin ? \"Don't have an account?\" : 'Already have an account?', ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(!isLogin),\n        className: \"toggle-button\",\n        children: isLogin ? 'Register' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"5BEGCx/G8HmmrtUPQQBZk/Objxk=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","Auth","setSession","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","loading","setLoading","error","setError","useEffect","auth","onAuthStateChange","event","session","console","log","handleAuth","e","preventDefault","response","signInWithPassword","signUp","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/patricia/Documents/GitHub/job-board/src/Auth.js"],"sourcesContent":["// src/Auth.js\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\n\nconst Auth = ({ setSession }) => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    supabase.auth.onAuthStateChange((event, session) => {\n      if (session) {\n        // User is logged in, update UI\n        console.log('Session exists:', session);\n      } else {\n        // User is logged out, update UI accordingly\n        console.log('No active session');\n      }\n    });\n  }, []);\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      let response;\n      if (isLogin) {\n        response = await supabase.auth.signInWithPassword({ email, password });\n      } else {\n        response = await supabase.auth.signUp({ email, password });\n      }\n\n      if (response.error) throw response.error;\n\n      setSession(response.session);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <h2>{isLogin ? 'Login' : 'Register'}</h2>\n      <form onSubmit={handleAuth}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        /><br/>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        /><br/>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Please wait...' : isLogin ? 'Login' : 'Register'}\n        </button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      <p>\n        {isLogin ? \"Don't have an account?\" : 'Already have an account?'}{' '}\n        <button onClick={() => setIsLogin(!isLogin)} className=\"toggle-button\">\n          {isLogin ? 'Register' : 'Login'}\n        </button>\n      </p>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}